@use 'sass:map';

// breakpoints
$xs: 0px;
$sm: 480px;
$md: 768px;
$lg: 1024px;
$xl: 1200px;
$xxl: 1400px;

$icone: (
    xs:0.6em,
    sm:0.8em,
    md:1em,
    lg:1.2em,
    xl:1.4em,
    xxl:1.6em
);
$badge:(
    xs:0.4em,
    sm:0.6em,
    md:0.8em,
    lg:1em
    );

@mixin create-spacing($start,$end,$name,$style,$step,$unit){
    @for $i from $start through $end {
        $size: $i * $step;
        .#{$name}-#{$i}{
            #{$style}: #{$size}#{$unit};
        }    
    }
}

@mixin create-from-object($map, $name, $style) {    
    @each $key, $value in $map {
        .#{$name}-#{$key} {
            #{$style}: #{$value} !important;
        }
    }
}

// container
.main-container{
    width:100%;
    padding:0;
    margin:0;
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;
}
.page-wrapper{
    position:relative;
    width:100%;
    margin:0;
    max-width:1500px;
    margin-top:130px !important;
    background-color: var(--bg-color);
}

// width
.w-full{ width: 100vw;}


//flexbox
@mixin flexbox(){
    position: relative;
    display: flex;
    flex-direction: row;
    justify-content: flex-start;
}
.flex {
    @include flexbox();
}
.flex-col{
    @include flexbox();
    flex-direction: column;
}
.flex-center{
    @include flexbox();
    justify-content: center;
}
.flex-end{
    @include flexbox();
    justify-content: flex-end;
}
.self-center{
    justify-self: center;
}
.flex-wrap{
    flex-wrap: wrap
}


// margin
@include create-spacing(0,10, 'ml','margin-left', 1, 'em');
// padding
@include create-spacing(0,10, 'mr','margin-right', 1, 'em');

// icone
@include create-from-object($icone, 'icone', 'font-size');
.icone-xs.icone-sm{
    font-size:map.get($icone, xs) !important;
}


// badge
@each $key, $value in $badge {
    .badge-#{$key}:after{
        content : attr(badge);
        position: absolute;
        top: calc(-#{$value} + (#{$value} / 2));
        color:var(--warn);
        border-radius: 50%;
        font-size:#{$value} !important
    }
}
